[
  {
    "_entityName": "wfstp$Stage",
    "id": "3e71b518-600f-eb52-42c8-b464f79f969f",
    "browseScreenGroovyScript": "import com.company.scrumit.entity.*;\r\nimport com.haulmont.cuba.gui.components.*;\r\nimport com.haulmont.cuba.core.global.*;\r\nimport org.apache.commons.collections4.*;\r\nimport com.groupstp.workflowstp.entity.Stage;\r\nimport com.groupstp.workflowstp.entity.WorkflowInstanceTask;\r\nimport org.apache.commons.lang.*;\r\nimport com.haulmont.cuba.gui.icons.*;\r\nimport com.haulmont.cuba.gui.xml.layout.*;\r\nimport com.groupstp.workflowstp.service.WorkflowService;\r\nimport com.haulmont.cuba.gui.components.actions.*;\r\nimport com.haulmont.chile.core.model.*;\r\nimport java.util.*;\r\n\r\nstage \u003d stage;\r\nframe \u003d screen;\r\n\r\nmessages \u003d AppBeans.get(Messages.NAME);\r\ncomponentsFactory \u003d AppBeans.get(ComponentsFactory.NAME);\r\nservice \u003d AppBeans.get(WorkflowService.NAME);\r\n\r\ntrackerTable \u003d (Table) frame.getComponentNN(\"trackerTable\");\r\n\r\ninitActions();\r\n\r\n\r\nprivate void initActions() {\r\n    ButtonsPanel buttonsPanel \u003d trackerTable.getButtonsPanel();\r\n    initReadyAction(trackerTable, buttonsPanel, stage, frame, service, messages);\r\n}\r\n\r\n\r\nprivate void initReadyAction(final Table\u003cTracker\u003e trackerTable, final ButtonsPanel buttonsPanel,\r\n                               final Stage stage, final Frame frame, final WorkflowService service, final Messages messages) {\r\n    Action action \u003d new BaseAction(\"isReady\") {\r\n        @Override\r\n        public String getCaption() {\r\n            return \"Внедрено\";\r\n        }\r\n\r\n        @Override\r\n        public String getIcon() {\r\n            return CubaIcon.OK.source();\r\n        }\r\n\r\n        @Override\r\n        public void actionPerform(Component component) {\r\n            Set\u003cTracker\u003e selected \u003d trackerTable.getSelected();\r\n            if(!CollectionUtils.isEmpty(selected)){\r\n                commitIfNeed(trackerTable);\r\n                try{\r\n                    for (Tracker problem : selected){\r\n                        try{\r\n                            WorkflowInstanceTask task \u003d service.getWorkflowInstanceTaskNN(problem,stage);\r\n                            if (task!\u003dnull){\r\n                                Map params \u003d new HashMap();\r\n                                params.put(\"isReady\",\"true\");\r\n                                service.finishTask(task,params);\r\n                            }\r\n                        } catch(Exception e){\r\n                            throw new RuntimeException(\"Ошибка обработки\",e);\r\n                        }\r\n                    }\r\n                } finally {\r\n                    trackerTable.getDatasource().refresh();\r\n                }\r\n            }\r\n        }\r\n\r\n        @Override\r\n        public boolean isPermitted() {\r\n            if (super.isPermitted()){\r\n                return !CollectionUtils.isEmpty(trackerTable.getSelected());\r\n            }\r\n            return false;\r\n        }\r\n    }    \r\n    Button button \u003d componentsFactory.createComponent(Button.class);\r\n    button.setAction(action);\r\n    buttonsPanel.add(button, 0);\r\n    trackerTable.addAction(action);\r\n}\r\n\r\nprivate static void commitIfNeed(Table\u003cTracker\u003e trackerTable) {\r\n    if (trackerTable.getDatasource().isModified()) {\r\n        trackerTable.getDatasource().commit();\r\n    }\r\n}\r\n",
    "type": "USERS_INTERACTION",
    "version": 9,
    "actors": [],
    "actorsRoles": [
      {
        "_entityName": "sec$Role",
        "id": "0c018061-b26f-4de2-a5be-dff348347f93",
        "version": 0,
        "name": "Administrators"
      },
      {
        "_entityName": "sec$Role",
        "id": "9741160c-dacd-0046-34a7-0a17c50cfdae",
        "version": 2,
        "name": "support"
      }
    ],
    "viewers": [],
    "entityName": "scrumit$Tracker",
    "viewersRoles": [
      {
        "_entityName": "sec$Role",
        "id": "0c018061-b26f-4de2-a5be-dff348347f93"
      },
      {
        "_entityName": "sec$Role",
        "id": "9741160c-dacd-0046-34a7-0a17c50cfdae"
      },
      {
        "_entityName": "sec$Role",
        "id": "7fc85802-d0e2-5a68-ba0b-5f97fbf204ec",
        "version": 3,
        "name": "developer"
      },
      {
        "_entityName": "sec$Role",
        "id": "fe1e6768-21ec-02d9-a295-4f01bbbd3e12",
        "version": 2,
        "name": "tester"
      }
    ],
    "name": "Проверено",
    "browserScreenConstructor": "{\"isBrowserScreen\":true,\"browserTableColumns\":[]}",
    "editorScreenGroovyScript": "import com.company.scrumit.entity.*;\r\nimport com.haulmont.cuba.gui.components.*;\r\nimport com.haulmont.cuba.core.global.*;\r\nimport org.apache.commons.collections4.*;\r\nimport org.apache.commons.lang.*;\r\nimport com.groupstp.workflowstp.entity.Stage;\r\nimport com.groupstp.workflowstp.entity.WorkflowInstanceTask;\r\nimport org.apache.commons.lang.*;\r\nimport com.haulmont.cuba.gui.icons.*;\r\nimport com.haulmont.cuba.gui.xml.layout.*;\r\nimport com.groupstp.workflowstp.service.WorkflowService;\r\nimport com.haulmont.cuba.gui.components.actions.*;\r\nimport com.haulmont.chile.core.model.*;\r\nimport java.util.*;\r\nimport com.haulmont.cuba.gui.data.*;\r\nimport com.haulmont.cuba.gui.components.*;\r\n\r\nentity \u003d entity;\r\ntask \u003d workflowInstanceTask;\r\neditor \u003d screen;\r\ninstance \u003d workflowInstance;\r\n\r\nmessages \u003d AppBeans.get(Messages.NAME);\r\ncomponentsFactory \u003d AppBeans.get(ComponentsFactory.NAME);\r\nservice \u003d AppBeans.get(WorkflowService.NAME);\r\n\r\ninitActions();\r\ninitFields();\r\n\r\n\r\nprivate void initFields() {\r\n    List\u003cString\u003e notEditableProperties \u003d Arrays.asList(\"project\",\"performer\",\"shortdesc\",\"priority\",\"type\");\r\n    \r\n    for (String property : notEditableProperties) {\r\n        editor.getComponentNN(property).setEditable(Boolean.FALSE)\r\n    }\r\n}\r\n\r\nprivate void initActions() {\r\n    BoxLayout box \u003d (BoxLayout) editor.getComponentNN(\"bottomPanel\");\r\n   \r\n    box.add(getReadyButton(entity, task, editor, service, messages),0);\r\n    \r\n    editor.trackerDs.addItemPropertyChangeListener(new Datasource.ItemPropertyChangeListener\u003cTracker\u003e() {\r\n        @Override\r\n        public void itemPropertyChanged(Datasource.ItemPropertyChangeEvent\u003cTracker\u003e e) {\r\n            refreshActionState(box);\r\n        }\r\n    });\r\n    refreshActionState(box);\r\n}\r\n\r\nprivate void refreshActionState(BoxLayout box) {\r\n    for (Component c : box.getComponents()) {\r\n        if (c instanceof Component.ActionOwner) {\r\n            Action action \u003d ((Component.ActionOwner) c).getAction();\r\n            if (action !\u003d null) {\r\n                action.refreshState();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nprivate Button getReadyButton(final Tracker problem, final WorkflowInstanceTask task, final AbstractEditor editor, final WorkflowService service, final Messages messages) {\r\n    Action action \u003d new BaseAction(\"isReady\") {\r\n        @Override\r\n        public String getCaption() {\r\n            return \"Внедрено\";\r\n        }\r\n\r\n        @Override\r\n        public String getIcon() {\r\n            return CubaIcon.OK.source();\r\n        }\r\n\r\n        @Override\r\n        public void actionPerform(Component component) {\r\n                try {\r\n                    commit(editor);\r\n                    Map params \u003d new HashMap();\r\n                    params.put(\"isReady\",\"true\");\r\n                    service.finishTask(task, params);\r\n                    editor.close(editor.COMMIT_ACTION_ID, true);\r\n                } catch (Exception e) {\r\n                    throw new RuntimeException(\"Ошибка обработки заявки\", e);\r\n                }\r\n           \r\n        }    \r\n    };\r\n    \r\n    Button button \u003d componentsFactory.createComponent(Button.class);\r\n    button.setAction(action);\r\n    return button;\r\n}\r\n\r\nprivate static void commit(AbstractEditor editor) {\r\n    if (editor.isModified()) {\r\n        editor.commitAndClose();\r\n    }\r\n}\r\n\r\n\r\n\r\n",
    "entityCaption": "Трэкер",
    "screenConstructor": "{\"isBrowserScreen\":false,\"actions\":[{\"id\":\"49f4693e-6aff-c01d-fc73-64557fd383af\",\"template\":\"02453325-9554-1cb5-db95-6e879b18bbf9\",\"order\":1},{\"id\":\"49c223f9-95b7-cde6-7b0a-34b1f254286a\",\"template\":\"1dfc0a8a-22cc-c762-d995-6074ca762854\",\"order\":2}]}"
  }
]